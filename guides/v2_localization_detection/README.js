Ext.data.JsonP.v2_localization_detection({"guide":"<h1>Localization Detection</h1>\n<div class='toc'>\n<p><strong>Contents</strong></p>\n<ol>\n<li><a href='#!/guide/v2_localization_detection-section-1'>HTML Files</a></li>\n<li><a href='#!/guide/v2_localization_detection-section-2'>ASPX Files</a></li>\n<li><a href='#!/guide/v2_localization_detection-section-3'>Adding a New Language</a></li>\n<li><a href='#!/guide/v2_localization_detection-section-4'>Testing</a></li>\n</ol>\n</div>\n\n<p>With an Argos app you have four included <code>index</code> files:</p>\n\n<p><code>index.html</code>, <code>index-dev.html</code>, <code>index.aspx</code> and <code>index-dev.aspx</code>.</p>\n\n<p>Namely two files each for dev and production - the difference lies in the file extension and thereby the\nway it adds in the needed localization.</p>\n\n<h2 id='v2_localization_detection-section-1'>HTML Files</h2>\n\n<p>The <code>*.html</code> files hard-code the localization:</p>\n\n<pre><code>require([application].concat(configuration), function(application, configuration) {\n    var localization = [\n        'localization/en',\n        'localization/appname/en'\n    ];\n</code></pre>\n\n<p>Which includes two localization pieces:</p>\n\n<ul>\n<li>Top Level: <code>localization/en</code> which is for currency, decimal and thousands symbols, etc; and</li>\n<li>App Strings: <code>localization/appname/en</code> which is the translated strings .js file from <a href=\"https://github.com/SageScottsdalePlatform/argos-localizer\">Argos-Localizer</a>.</li>\n</ul>\n\n\n<h2 id='v2_localization_detection-section-2'>ASPX Files</h2>\n\n<p>The <code>*.aspx</code> files use server side code for detecting the localization of the browser and dynamically\ninclude the needed localization paths:</p>\n\n<pre><code>require([application].concat(configuration), function(application, configuration) {\n    var localization = &lt;%= Serialize(\n        EnumerateLocalizations(\"localization\")\n            .Select(item =&gt; item.Path.Substring(0, item.Path.Length - 3))\n    ) %&gt;;\n</code></pre>\n\n<p>Note that the C# code gets the <em>browsers</em> locale meaning depending on which browser you use the locale\nmay be set in the browser itself, the operating system you are running, or even a plugin.</p>\n\n<h2 id='v2_localization_detection-section-3'>Adding a New Language</h2>\n\n<p>To add a new language you need to have both the \"top level\" and the \"app strings\" pieces:</p>\n\n<p><code>localization/klingon.js</code> and <code>localization/appname/klingon.js</code></p>\n\n<h3>Top Level</h3>\n\n<p>To define a new top level localization piece:</p>\n\n<p>1. Download a <a href=\"guides/v2_localization_detection/en.js\">sample top level</a></p>\n\n<p>2. Rename to the proper\n<a href=\"http://www.iso.org/iso/country_codes.htm\">ISO 3166</a> code. Note that the locale detection performs a fall-\nback to generic locale (browser detects <code>de-DE</code>, doesn't find <code>de-DE.js</code> so it tries <code>de.js</code> which is successful).</p>\n\n<p>3. Edit the file, making sure to change the define path:</p>\n\n<pre><code>define('localization/en', ['dojo/_base/lang'], function(lang) {\n</code></pre>\n\n<p>to</p>\n\n<pre><code>define('localization/klingon', ['dojo/_base/lang'], function(lang) {\n</code></pre>\n\n<p>4. Save and drop into the <code>products/appname/localization/</code> folder.</p>\n\n<h3>App Strings</h3>\n\n<p>1. Follow either <a href=\"#!/guide/v2_localization_example\">Localization Example</a> or the Argos-Localizer code directly on <a href=\"https://github.com/SageScottsdalePlatform/argos-localizer\">Github</a>.</p>\n\n<p>2. Take the resulting <code>.js</code> file and drop it into the <code>products/appname/localization/appname/</code> folder.</p>\n\n<h2 id='v2_localization_detection-section-4'>Testing</h2>\n\n<p>There are two approaches depending on what tools you want to use:</p>\n\n<p>1. Edit the <code>.html</code> file; or</p>\n\n<p>2. Change the browser locale and use <code>.aspx</code>.</p>\n\n<p>Note that in both cases if you don't see a change right away that means you should a) clear your cache or\nb) close all browser instances and restart it (in the case of approach 2).</p>\n\n<h3>Editing the HTML File</h3>\n\n<p>Testing using the hard coded HTML file is the easiest and most direct approach:</p>\n\n<p>1. Change the default English locale:</p>\n\n<pre><code>require([application].concat(configuration), function(application, configuration) {\n    var localization = [\n        'localization/en',\n        'localization/appname/en'\n    ];\n</code></pre>\n\n<p>to your added locale</p>\n\n<pre><code>require([application].concat(configuration), function(application, configuration) {\n    var localization = [\n        'localization/klingon',\n        'localization/appname/klingon'\n    ];\n</code></pre>\n\n<p>2. Save and open the file.</p>\n\n<h3>Changing the Browser Locale</h3>\n\n<p>To use the <code>.aspx</code> file auto-detection you need to alter the browsers locale.</p>\n\n<h4>Chrome (Windows)</h4>\n\n<p>1. Create a shortcut to Chrome</p>\n\n<p>2. Right-click, edit Properties</p>\n\n<p>3. Add to the Target field:</p>\n\n<pre><code>path_to_chrome.exe --lang=klingon\n</code></pre>\n\n<p>4. Optionally, you may add:</p>\n\n<pre><code>--user-data-dir=C:\\chrome_profiles\\klingon\n</code></pre>\n\n<p>This saves all the chrome data to a new profile and not your default one.</p>\n\n<p>There is also a way under the Wrench but it is several levels deep, a shortcut is easier to maintain\nmultiple languages and you can add more command line options to point to your file, enable extra logging\nand other features.</p>\n\n<h4>Chrome (Mac)</h4>\n\n<p>No option available besides changing:</p>\n\n<p>1. From the Apple Menu choose <code>System Preferences</code>;</p>\n\n<p>2. Then under <code>Personal</code> select <code>International</code>;</p>\n\n<p>3. Set the locale;</p>\n\n<p>4. Restart all browser sessions.</p>\n\n<h4>FireFox</h4>\n\n<p>Since FireFox has an excellent extension API it is possible to alter the locale directly via a plugin:</p>\n\n<p><a href=\"https://addons.mozilla.org/en-US/firefox/addon/quick-locale-switcher/\">Quick Locale Switcher</a></p>\n\n<p>1. Install and load the plugin.</p>\n\n<p>2. After opening the page, use the plugins icon to change the locale.</p>\n\n<h4>IE9</h4>\n\n<p>1. Click the gears icon and select <code>Internet options</code>;</p>\n\n<p>2. In the <code>General</code> tab, at the bottom, click <code>Languages</code>; and</p>\n\n<p>3. Add the locale and move it to the very top. Click Ok.</p>\n","title":"Localization Detection"});