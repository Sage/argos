Ext.data.JsonP.FieldRegistry({"tagname":"class","name":"FieldRegistry","extends":null,"mixins":[],"alternateClassNames":["FieldRegistry"],"aliases":{},"singleton":true,"requires":[],"uses":[],"enum":null,"override":null,"inheritable":null,"inheritdoc":null,"meta":{},"private":null,"id":"class-FieldRegistry","members":{"cfg":[],"property":[{"name":"defaultType","tagname":"property","owner":"FieldRegistry","meta":{},"id":"property-defaultType"},{"name":"fromType","tagname":"property","owner":"FieldRegistry","meta":{},"id":"property-fromType"}],"method":[{"name":"getFieldFor","tagname":"method","owner":"FieldRegistry","meta":{},"id":"method-getFieldFor"},{"name":"register","tagname":"method","owner":"FieldRegistry","meta":{},"id":"method-register"}],"event":[],"css_var":[],"css_mixin":[]},"linenr":23,"files":[{"filename":"FieldRegistry.js","href":"FieldRegistry.html#FieldRegistry"}],"html_meta":{},"statics":{"cfg":[],"property":[],"method":[],"event":[],"css_var":[],"css_mixin":[]},"component":false,"superclasses":[],"subclasses":[],"mixedInto":[],"parentMixins":[],"html":"<div><pre class=\"hierarchy\"><h4>Alternate names</h4><div class='alternate-class-name'>FieldRegistry</div><h4>Files</h4><div class='dependency'><a href='source/FieldRegistry.html#FieldRegistry' target='_blank'>FieldRegistry.js</a></div></pre><div class='doc-contents'><p>Field Registry is a map of field types to their constructors that enables the Edit View layouts to\nsimply define <code>type: 'myFieldType'</code>.</p>\n</div><div class='members'><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-property'>Properties</h3><div class='subsection'><div id='property-defaultType' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='FieldRegistry'>FieldRegistry</span><br/><a href='source/FieldRegistry.html#FieldRegistry-property-defaultType' target='_blank' class='view-source'>view source</a></div><a href='#!/api/FieldRegistry-property-defaultType' class='name expandable'>defaultType</a><span> : Function</span></div><div class='description'><div class='short'>Default field constructor to use if the requested field type name is not registered and no fallback\nconstructor is pr...</div><div class='long'><p>Default field constructor to use if the requested field type name is not registered and no fallback\nconstructor is provided.</p>\n</div></div></div><div id='property-fromType' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='FieldRegistry'>FieldRegistry</span><br/><a href='source/FieldRegistry.html#FieldRegistry-property-fromType' target='_blank' class='view-source'>view source</a></div><a href='#!/api/FieldRegistry-property-fromType' class='name expandable'>fromType</a><span> : Object</span></div><div class='description'><div class='short'>Collection of field type names (keys) and their respective constructor functions (values). ...</div><div class='long'><p>Collection of field type names (keys) and their respective constructor functions (values).</p>\n<p>Defaults to: <code>{}</code></p></div></div></div></div></div><div class='members-section'><div class='definedBy'>Defined By</div><h3 class='members-title icon-method'>Methods</h3><div class='subsection'><div id='method-getFieldFor' class='member first-child not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='FieldRegistry'>FieldRegistry</span><br/><a href='source/FieldRegistry.html#FieldRegistry-method-getFieldFor' target='_blank' class='view-source'>view source</a></div><a href='#!/api/FieldRegistry-method-getFieldFor' class='name expandable'>getFieldFor</a>( <span class='pre'>props, fallback</span> ) : Function</div><div class='description'><div class='short'>Returns a field constructor for the given type name. ...</div><div class='long'><p>Returns a field constructor for the given type name.</p>\n\n<p>If name is not found a fallback constructor may be provided, if not the default constructor will be returned.</p>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>props</span> : String/Object<div class='sub-desc'><p>Name of the field type to return. If an object is given the name will be\nextracted from it's object.type.</p>\n</div></li><li><span class='pre'>fallback</span> : Function<div class='sub-desc'><p>A fallback field constructor if the field type name is not found.</p>\n</div></li></ul><h3 class='pa'>Returns</h3><ul><li><span class='pre'>Function</span><div class='sub-desc'><p>Constructor for the field type name.</p>\n</div></li></ul></div></div></div><div id='method-register' class='member  not-inherited'><a href='#' class='side expandable'><span>&nbsp;</span></a><div class='title'><div class='meta'><span class='defined-in' rel='FieldRegistry'>FieldRegistry</span><br/><a href='source/FieldRegistry.html#FieldRegistry-method-register' target='_blank' class='view-source'>view source</a></div><a href='#!/api/FieldRegistry-method-register' class='name expandable'>register</a>( <span class='pre'>type, ctor</span> )</div><div class='description'><div class='short'>Registers a given unique type name with a field constructor. ...</div><div class='long'><p>Registers a given unique type name with a field constructor.</p>\n\n<p>If the type is provided as an object it is treated as a map of multiple type names and constructors and is\nmerged in.</p>\n\n<p>Edit Views layout objects will use this register when defining <code>type</code> of a field:</p>\n\n<pre><code>{\n    name: '',\n    property: '',\n    label: '',\n    type: 'fieldType' // this is used with the register to access the constructor\n}\n</code></pre>\n<h3 class=\"pa\">Parameters</h3><ul><li><span class='pre'>type</span> : String/Object<div class='sub-desc'><p>Unique name of the field to register.</p>\n</div></li><li><span class='pre'>ctor</span> : Function<div class='sub-desc'><p>Constructor of the field being registered.</p>\n</div></li></ul></div></div></div></div></div></div></div>"});